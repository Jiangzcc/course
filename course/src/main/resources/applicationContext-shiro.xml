<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

	<!-- 配置使用自定义认证器，可以实现多Realm认证，并且可以指定特定Realm处理特定类型的验证 -->
	<bean id="authenticator"
		class="com.jiangzhichao.shiro.CustomizedModularRealmAuthenticator">
		<!-- 配置认证策略，只要有一个Realm认证成功即可，并且返回所有认证成功信息 -->
		<property name="authenticationStrategy">
			<bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
		</property>
	</bean>
	
	<bean id="adminRealm" class="com.jiangzhichao.shiro.AdminRealm">
		<!-- 对认证数据、授权数据 哪些进行缓存 缓存区的名字就是ehcache.xml 自定义cache的name -->
		<property name="authorizationCacheName" value="bos"></property>
	</bean>
	<bean id="studentRealm" class="com.jiangzhichao.shiro.StudentRealm">
		<property name="authorizationCacheName" value="bos"></property>
	</bean>
	<bean id="teacherRealm" class="com.jiangzhichao.shiro.TeacherRealm">
		<property name="authorizationCacheName" value="bos"></property>
	</bean>

	<!-- securityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--调用自定义realm -->
		<property name="authenticator" ref="authenticator"></property>
		<!-- 可以配置多个Realm，其实会把realms属性赋值给ModularRealmAuthenticator的realms属性 -->
		<property name="realms">
			<list>
				<ref bean="studentRealm" />
				<ref bean="teacherRealm" />
				<ref bean="adminRealm" />
			</list>
		</property>
		<!-- 将shiro的缓存管理器，注入到安全管理器中 要想在Realm中将查询的数据放置到缓存中， 需要在Realm之前创建动态代理对象，通过缓存代理控制Realm -->
		<property name="cacheManager" ref="shiroCacheManager"></property>
	</bean>

	<!-- shiroFilter工厂 -->
	<bean id="shiroFilter"
		class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 构建securityManager环境 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
		<property name="loginUrl" value="/login/admin/index.html" />
		<!-- 登录成功后要跳转的连接 -->
		<!-- <property name="successUrl" value="/index.html" /> -->
		<!-- 没有权限返回的地址 （拒绝访问路径） -->
		<property name="unauthorizedUrl" value="/error/permission.html" />
		<property name="filterChainDefinitions">
			<value>
				/admin/**=authc,roles[admin]
				/teacher/**=authc,roles[teacher]
				/student/**=authc,roles[student] 
				/**=anon
			</value>
		</property>
	</bean>

	<bean id="lifecycleBeanPostProcessor"
		class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

</beans>